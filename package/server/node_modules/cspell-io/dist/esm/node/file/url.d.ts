export declare function isZipped(filename: string | URL): boolean;
export declare function isUrlLike(filename: string | URL): boolean;
export declare function isSupportedURL(url: URL): boolean;
export declare function isFileURL(url: URL): boolean;
/**
 * Try to make a file URL.
 * - if filenameOrUrl is already a URL, it is returned as is.
 * -
 * @param filenameOrUrl
 * @param relativeTo - optional URL, if given, filenameOrUrl will be parsed as relative.
 * @returns a URL
 */
export declare function toFileURL(filenameOrUrl: string | URL, relativeTo?: string | URL): URL;
/**
 * Try to make a URL.
 * @param filenameOrUrl
 * @param relativeTo - optional URL, if given, filenameOrUrl will be parsed as relative.
 * @returns a URL
 */
export declare function toURL(filenameOrUrl: string | URL, relativeTo?: string | URL): URL;
/**
 * Try to determine the base name of a URL.
 * @param url
 * @returns the base name of a URL, including the trailing `/` if present.
 */
export declare function urlBasename(url: string | URL): string;
/**
 * Try to determine the parent directory URL of the uri.
 * If it is not a hierarchical URL, then it will return the URL.
 * @param url - url to extract the dirname from.
 * @returns a URL
 */
export declare function urlDirname(url: string | URL): URL;
/**
 * return the basename of a path, removing the trailing `/` if present.
 * @param path
 * @returns
 */
export declare function basename(path: string): string;
export declare function normalizePathForUrl(filePath: string): string;
//# sourceMappingURL=url.d.ts.map