import * as ExclusionHelper from './exclusionHelper.js';
import * as Link from './Settings/index.link.js';
import * as Text from './util/text.js';
export { fileToDocument, fileToTextDocument, isBinaryFile } from './Document/index.js';
export { FeatureFlags, getSystemFeatureFlags, UnknownFeatureFlagError } from './FeatureFlags/index.js';
export { getLanguagesForBasename as getLanguageIdsForBaseFilename, getLanguagesForExt } from './LanguageIds.js';
export { createTextDocument, updateTextDocument } from './Models/TextDocument.js';
export { calcOverrideSettings, checkFilenameMatchesGlob, createConfigLoader, currentSettingsFileVersion, defaultConfigFilenames, defaultFileName, ENV_CSPELL_GLOB_ROOT, extractDependencies, extractImportErrors, finalizeSettings, getCachedFileSize, getDefaultBundledSettingsAsync, getDefaultConfigLoader, getDefaultSettings, getGlobalSettings, getGlobalSettingsAsync, getSources, ImportError, loadConfig, loadPnP, mergeInDocSettings, mergeSettings, readRawSettings, readSettings, readSettingsFiles, searchForConfig, sectionCSpell, } from './Settings/index.js';
export { defaultFileName as defaultSettingsFilename } from './Settings/index.js';
export { combineTextAndLanguageSettings, combineTextAndLanguageSettings as constructSettingsForText, } from './Settings/TextDocumentSettings.js';
export { determineFinalDocumentSettings, spellCheckDocument, spellCheckFile, } from './spellCheckFile.js';
export { CompoundWordsMethod, createSpellingDictionary, createCollection as createSpellingDictionaryCollection, isSpellingDictionaryLoadError, refreshDictionaryCache, SpellingDictionaryLoadError, } from './SpellingDictionary/index.js';
export { SuggestionError, suggestionsForWord, suggestionsForWords } from './suggestions.js';
export { DocumentValidator, shouldCheckDocument } from './textValidation/index.js';
export { traceWords, traceWordsAsync } from './trace.js';
export { getLogger, setLogger } from './util/logger.js';
export { resolveFile } from './util/resolveFile.js';
export { checkText, checkTextDocument, IncludeExcludeFlag, validateText, } from './validator.js';
export * from '@cspell/cspell-types';
export { asyncIterableToArray, readFileText as readFile, readFileTextSync as readFileSync, writeToFile, writeToFileIterable, writeToFileIterableP, } from 'cspell-io';
export { Link, Text };
export { ExclusionHelper };
export { clearCachedFiles, clearCaches } from './clearCachedFiles.js';
export { FSCapabilityFlags, getVirtualFS } from './fileSystem.js';
export { getDictionary } from './getDictionary.js';
export { createPerfTimer } from './perf/index.js';
//# sourceMappingURL=index.js.map